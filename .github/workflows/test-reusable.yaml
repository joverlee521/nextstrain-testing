name: Reusable

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: false
      runtime-envvar-names:
        type: string
        required: false
      artifact-paths:
        type: string
        required: false

env:
  ENVDIR: env.d

jobs:
  get-ref:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - id: ref
        name: Get reusable workflow ref via API
        run: >
          sha="$(gh api \
              -H 'Accept: application/vnd.github+json' \
              repos/joverlee521/nextstrain-testing/actions/runs/${{ github.run_id }} \
            | jq --raw-output '
                .referenced_workflows
              | map(select(.path
              | contains("joverlee521/nextstrain-testing/.github/workflows/test-reusable.yaml")))
              | .[0].sha')"

          echo sha="$sha" | tee -a "$GITHUB_OUTPUT"
    outputs:
      sha: ${{ steps.ref.outputs.sha }}

  run:
    needs: get-ref
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: joverlee521/nextstrain-testing
          ref: ${{ needs.get-ref.outputs.sha }}

      - run: ./bin/hello-world

      - run: ./bin/hello-new-world

      - name: local-fix
        run: |
          # Hack to get setup-python to work on act
          # (see https://github.com/nektos/act/issues/251)
          if [ ! -f "/etc/lsb-release" ] ; then
            echo "DISTRIB_RELEASE=18.04" > /etc/lsb-release
          fi

      - name: Add test envvar
        shell: bash
        env:
          varnames: ${{ inputs.runtime-envvars-names }}
        run: |
          read -a runtime_varnames -r -d $'\0' <<<"$varnames" || true
          ./bin/write-envdir ${{ env.ENVDIR }} "${runtime_varnames[@]}"

      - uses: nextstrain/.github/actions/setup-nextstrain-cli@master
        with:
          runtime: conda

      - name: Install envdir
        shell: nextstrain shell . {0}
        run: pip install envdir

      - if: inputs.env
        name: Set environment variables
        env:
          env: ${{ inputs.env }}
        run: >
          echo "$env"
          | yq --output-format json .
          | ./bin/json-to-envvar
          | tee -a "$GITHUB_ENV"

      - name: Set secrets to envvars
        env:
          secrets: ${{ toJson(secrets) }}
        run: >
          echo "$secrets"
          | ./bin/json-to-envvar
          | tee -a "$GITHUB_ENV"

      - name: Run build
        run: |
          nextstrain build \
            --exec env . \
            envdir ${{ env.ENVDIR }} printenv ${{ inputs.runtime-envvar-names }} \
          | tee build.log

      - name: Check Augur
        shell: nextstrain shell . {0}
        run: augur --version

      - if: always()
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: |
            build.log
            !${{ env.ENVDIR }}
