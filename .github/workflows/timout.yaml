name: Test timeout in `run`

on: workflow_dispatch

jobs:
  job1:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - id: sleep
        run: |
          exit_code=0
          timeout 5s sleep 5m || exit_code=$?

          if [[ $exit_code == 0 ]]; then
            conclusion="success"
          elif [[ $exit_code == 124 ]]; then
            # 124 is the exit code for timed out commands
            # Mask the exit code so that the job concludes successfully
            # and we can continue the next wait-N job.
            exit_code=0
            conclusion="timeout"
          else
            conclusion="failure"
          fi

          echo "conclusion=$conclusion" | tee -a "$GITHUB_OUTPUT"
          exit $exit_code
    outputs:
      sleep-step-conclusion: ${{ steps.sleep.outputs.conclusion }}

  job2:
    runs-on: ubuntu-latest
    needs: [ job1 ]
    if: ${{ needs.job1.outputs.sleep-step-conclusion == 'timeout' }}
    timeout-minutes: 1
    steps:
      - id: sleep
        run: |
          exit_code=0
          timeout 5s sleep 3s || exit_code=$?

          if [[ $exit_code == 0 ]]; then
            conclusion="success"
          elif [[ $exit_code == 124 ]]; then
            # 124 is the exit code for timed out commands
            # Mask the exit code so that the job concludes successfully
            # and we can continue the next wait-N job.
            exit_code=0
            conclusion="timeout"
          else
            conclusion="failure"
          fi

          echo "conclusion=$conclusion" | tee -a "$GITHUB_OUTPUT"
          exit $exit_code
    outputs:
      sleep-step-conclusion: ${{ steps.sleep.outputs.conclusion }}

  job3:
    runs-on: ubuntu-latest
    needs: [ job2 ]
    if: ${{ needs.job2.outputs.sleep-step-conclusion == 'timeout' }}
    timeout-minutes: 1
    steps:
      - id: sleep
        run: |
          exit_code=0
          timeout 5s sleep 5m || exit_code=$?

          if [[ $exit_code == 0 ]]; then
            conclusion="success"
          elif [[ $exit_code == 124 ]]; then
            # 124 is the exit code for timed out commands
            # Mask the exit code so that the job concludes successfully
            # and we can continue the next wait-N job.
            exit_code=0
            conclusion="timeout"
          else
            conclusion="failure"
          fi

          echo "conclusion=$conclusion" | tee -a "$GITHUB_OUTPUT"
          exit $exit_code
    outputs:
      sleep-step-conclusion: ${{ steps.sleep.outputs.conclusion }}
